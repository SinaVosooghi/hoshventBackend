# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attendee {
  created: DateTime

  """id of the attendee"""
  id: Float
  seminar: Seminar
  services: [JSONObject!]

  """Site of the item"""
  site: Site

  """Status of the attendee"""
  status: Boolean!
  updated: DateTime

  """Organizer of the attendee"""
  user: User
  workshop: Workshop
}

type AttendeePaginate {
  attends: [Attendee!]
  count: Float!
}

type Blog {
  """Author of the blog"""
  author: User

  """body of the blog"""
  body: String!

  """Category of the blog"""
  category: Category
  created: DateTime

  """Featured of the blog"""
  featured: Boolean!

  """Id of the blog"""
  id: Float!

  """Image of the blog"""
  image: String

  """likes of the blog"""
  likes: [Like!]

  """Read time of the blog"""
  readtime: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Site of the item"""
  site: Site

  """Slug of the blog"""
  slug: String!

  """Status of the blog"""
  status: Boolean!

  """title of the blog"""
  title: String!
  updated: DateTime
}

type BlogPaginate {
  blogs: [Blog!]
  count: Float!
}

type Brand {
  """Description of the Brand"""
  body: String
  created: DateTime

  """Is brand featured"""
  featured: Boolean!

  """id of the Brand"""
  id: Float!

  """Image of the course"""
  image: String

  """Description of the Brand"""
  link: String

  """Site of the item"""
  site: Site

  """Status of the brand"""
  status: Boolean

  """Title of the Brand"""
  title: String!
  updated: DateTime
}

type BrandPaginate {
  brands: [Brand!]
  count: Float!
}

input Bulkaction {
  actionId: Int!
  ids: [Int!]
  type: String!
}

type Category {
  """Description of the Category"""
  body: String

  """Category parent of the category"""
  category: Category
  created: DateTime

  """Is category featured"""
  featured: Boolean!

  """id of the Category"""
  id: Float!

  """Image of the course"""
  image: String

  """Body SEO of the Category"""
  seobody: String

  """Title SEO of the Category"""
  seotitle: String

  """Site of the item"""
  site: Site

  """Slug of the Category"""
  slug: String!

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String!

  """Type of the Category"""
  type: String!
  updated: DateTime
}

type CategoryPaginate {
  categories: [Category!]
  count: Float!
}

type Chat {
  """Close of the Chat"""
  closed: Boolean
  created: DateTime

  """Department user of the chat"""
  department: Department
  email: Boolean!

  """From user of the chat"""
  from: User!
  from_read: DateTime

  """Id of the Chat"""
  id: Float!

  """Invoice user of the chat"""
  invoice: Invoice

  """Message of chats"""
  messages: [Message!]

  """priority of the Chat"""
  priority: String!

  """Can reply of the Chat"""
  repliable: Boolean

  """Site of the item"""
  site: Site
  sms: Boolean!

  """starred of the Chat"""
  starred: Boolean

  """status of the Chat"""
  status: Boolean!

  """subject of the Chat"""
  subject: String!

  """From user of the chat"""
  to: User!
  to_read: DateTime

  """type of the Chat"""
  type: String!
  updated: DateTime
}

type ChatPaginate {
  chats: [Chat!]
  count: Float!
}

type Comment {
  """title of the Comment"""
  body: String!

  """Comment of the Comment"""
  comments: Comment
  created: DateTime

  """Id of the Comment"""
  id: Float!

  """Site of the item"""
  site: Site

  """status of the Comment"""
  status: Boolean!
  updated: DateTime

  """User of the Comment"""
  user: User
}

type CommentPaginate {
  comments: [Comment!]
  count: Float!
}

type Contact {
  body: String
  created: DateTime
  email: String

  """Id of the blog"""
  id: Float!
  name: String

  """Site of the item"""
  site: Site
  subject: String!
}

type ContactPaginate {
  contacts: [Contact!]
  count: Float!
}

type Coupon {
  """description of the coupon"""
  body: String

  """Code of the coupon"""
  code: String!
  created: DateTime

  """expire date of the coupon"""
  expiredate: DateTime

  """Id of the coupon"""
  id: Float!

  """limit of the coupon"""
  limit: Float

  """percent of the coupon"""
  percent: Float

  """Site of the item"""
  site: Site

  """start date of the coupon"""
  startdate: DateTime

  """status of the coupon"""
  status: Boolean!

  """title of the coupon"""
  title: String!

  """Type of the coupon"""
  type: String!
  updated: DateTime
}

type CouponPaginate {
  count: Float!
  coupons: [Coupon!]
}

input CreateAtendeeInput {
  seminar: Float
  services: String
  site: Float

  """Status of the attendee"""
  status: Boolean! = true

  """User of the attendee"""
  user: Float!
  workshop: Float
}

input CreateBlogInput {
  """body of the blog"""
  body: String!

  """Category of the blog"""
  category: Float!

  """Featured of the blog"""
  featured: Boolean!

  """Image of the Service"""
  image: Upload

  """Read time of the blog"""
  readtime: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Slug of the blog"""
  slug: String!

  """Status of the blog"""
  status: Boolean!

  """title of the blog"""
  title: String!
}

input CreateBrandInput {
  """Description of the Brand"""
  body: String
  brand: Float

  """Is course featured"""
  featured: Boolean

  """Image of the Service"""
  image: Upload
  link: String

  """Status of the brand"""
  status: Boolean

  """Title of the Brand"""
  title: String!
}

input CreateCategoryInput {
  """Description of the Category"""
  body: String
  category: Float

  """Is course featured"""
  featured: Boolean

  """Image of the Service"""
  image: Upload

  """Title of the Category"""
  slug: String!

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String!

  """Type of the Category"""
  type: String!
}

input CreateChatInput {
  """body of the Chat"""
  body: String!
  category: Float

  """Close of the Chat"""
  closed: Boolean

  """Department user of the chat"""
  department: Float

  """Can reply of the Chat"""
  email: Boolean

  """From user of the chat"""
  from: Float

  """Invoice user of the chat"""
  invoice: Float

  """priority of the Chat"""
  priority: String!

  """Can reply of the Chat"""
  repliable: Boolean
  site: Float
  sms: Boolean

  """status of the Chat"""
  status: Boolean

  """subject of the Chat"""
  subject: String!

  """Can reply of the Chat"""
  system: Boolean

  """To user of the chat"""
  to: [Float!]

  """type of the Chat"""
  type: String!
}

input CreateCommentInput {
  """body of the Comment"""
  body: String!

  """status of the Comment"""
  status: Boolean

  """User of the Comment"""
  user: Float!
}

input CreateContactInput {
  body: String!
  email: String
  name: String

  """Site of the Event"""
  siteid: Float
  subject: String!
}

input CreateCouponInput {
  """description of the coupon"""
  body: String

  """Code of the coupon"""
  code: String!

  """expire date of the coupon"""
  expiredate: DateTime

  """limit of the coupon"""
  limit: Float

  """percent of the coupon"""
  percent: Float

  """start date of the coupon"""
  startdate: DateTime

  """status of the coupon"""
  status: Boolean!

  """title of the coupon"""
  title: String!

  """Type of the coupon"""
  type: String!
}

input CreateDepartmentInput {
  """Description of the Category"""
  body: String

  """Image of the course"""
  image: String

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String!
}

input CreateEventInput {
  """body of the Event"""
  body: String!

  """Capacity of seminar"""
  capacity: Float

  """Site of the Event"""
  category: Float!

  """Duration of the course"""
  duration: String

  """Enddate of workshop"""
  end_date: DateTime

  """Featured of the Event"""
  featured: Boolean

  """Image of the Event"""
  image: Upload

  """Offprice of seminar"""
  offprice: Float

  """PDF of the Event"""
  pdf: Upload

  """Price of the Event"""
  price: Float

  """Body SEO of the Event"""
  seobody: String

  """Title SEO of the Event"""
  seotitle: String

  """Site of the Event"""
  site: Float

  """Slug of the Event"""
  slug: String!

  """Startdate of workshop"""
  start_date: DateTime

  """Status of the Event"""
  status: Boolean!

  """title of the Event"""
  title: String!

  """Video of the Event"""
  video: String
}

input CreateHallInput {
  """Description of the hall"""
  body: String

  """Event of the hall"""
  event: Float

  """Is hall featured"""
  featured: Boolean!

  """Image of the Hall"""
  image: Upload

  """Status of the hall"""
  status: Boolean

  """Title of the hall"""
  title: String!
}

input CreateInvoiceInput {
  """discount of invoice"""
  coupon: Float

  """Payment has been done of the invoice"""
  donepayment: Boolean!
  duedate: DateTime

  """Invoice number of the invoice"""
  invoicenumber: Float!
  issuedate: DateTime
  items: [JSONObject!]

  """Title of the invoice"""
  note: String
  order: Float

  """Payment of the invoice"""
  payment: Float

  """Payment type of the invoice"""
  paymenttype: String!

  """Salesperson of the invoice"""
  salesperson: String

  """Shipping of invoice"""
  shipping: Float

  """Site of the Event"""
  site: Float

  """Type of the invoice"""
  type: String!

  """User of invoice"""
  user: Float
}

input CreateItemInput {
  """Event of the item"""
  event: Float

  """Order of the item"""
  order: Float!

  """Price of the items"""
  price: Float!

  """number of the items"""
  quantity: Float!
}

input CreateLikeInput {
  """Blog of the Like"""
  blog: Float

  """Course of the Like"""
  course: Float

  """Like of the Like"""
  like: Boolean!

  """Product of the Like"""
  product: Float
}

input CreateMenuInput {
  link: String!
  order: Float = 0
  status: Boolean
  title: String!
}

input CreateMessageInput {
  """title of the Chat"""
  body: String!

  """Chat of the message"""
  chat: Float!
}

input CreateOrderInput {
  """Coupon of the order"""
  coupon: Float!

  """Payment of the order"""
  payment: Float

  """Shipping of the order"""
  shipping: Float!

  """status of the order"""
  status: Boolean! = false

  """Subtotal of the order"""
  subtotal: Float!

  """Amount of the order"""
  totalprice: Float!

  """User of the order"""
  user: Float!
}

input CreatePaymentInput {
  """Amount of the payment"""
  amount: Float!

  """Authority of the payment"""
  authority: String

  """Coupon method id of the payment"""
  coupon: Float
  host: String!

  """Payment method id of the payment"""
  payment: Float

  """Payment method id of the payment"""
  paymentMethodId: String

  """Payment method of the payment"""
  paymentmethod: String
  products: [JSONObject!]

  """Refid of the payment"""
  refid: String

  """Site of the Event"""
  site: Float

  """Status of the payment"""
  statusCode: String

  """Type of the payment"""
  type: String
}

input CreatePlanInput {
  """body of the Plan"""
  body: String

  """Image of the Plan"""
  image: Upload

  """body of the Plan"""
  price: Float

  """Service of the plans"""
  services: [Float!]

  """Slug of the plan"""
  slug: String!

  """Sms of the Plan"""
  sms: Float

  """Status of the Plan"""
  status: Boolean!

  """Subtitle of the plan"""
  subtitle: String

  """title of the Plan"""
  title: String!
}

input CreateProductInput {
  """body of the product"""
  body: String

  """Category of the product"""
  category: Float!

  """Is product featured"""
  featured: Boolean!

  """Enable comments of product"""
  hascomment: Boolean!

  """Image of the product"""
  image: [String!]

  """Off Price of the product"""
  offprice: Float
  prerequisite: [JSONObject!]

  """Price of the product"""
  price: Float

  """Quantity of the product"""
  quantity: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Slug of the Category"""
  slug: String!

  """Status of product"""
  status: Boolean!

  """title of the product"""
  title: String!
  variations: [JSONObject!]
}

input CreateRoleInput {
  body: String
  permissions: JSONObject

  """Title field (placeholder)"""
  title: String!
}

input CreateScanInput {
  """User of the attendee"""
  scanby: Float!
  seminar: Float
  site: Float
  type: String!

  """User of the attendee"""
  user: Float!
  workshop: Float
}

input CreateSeminarInput {
  """Description of the seminar"""
  body: String

  """Capacity of Seminar"""
  capacity: Float

  """Enddate of Seminar"""
  end_date: DateTime

  """Is seminar featured"""
  featured: Boolean!

  """Hall of the seminar"""
  hall: Float

  """Image of the Seminar"""
  image: Upload

  """User of the Seminar"""
  lecturers: [Float!]

  """Price of the seminar"""
  price: Float

  """Body SEO of the seminar"""
  seobody: String

  """Title SEO of the seminar"""
  seotitle: String
  services: [Float!]

  """Slug of the seminar"""
  slug: String!

  """Startdate of Seminar"""
  start_date: DateTime

  """State of the seminar"""
  state: String = "not_started"

  """Status of the seminar"""
  status: Boolean

  """Title of the seminar"""
  title: String!
}

input CreateServiceInput {
  """body of the Service"""
  body: String!

  """Enddate of service"""
  end_date: DateTime

  """Events of the service"""
  events: [Float!]

  """Image of the service"""
  image: Upload

  """Per person of the service"""
  perperson: Float

  """body of the Service"""
  price: Float

  """Quantity of the Service"""
  quantity: Float

  """Startdate of service"""
  start_date: DateTime

  """Status of the Service"""
  status: Boolean!

  """title of the Service"""
  title: String!
}

input CreateSettingInput {
  about: String
  address: String
  companyName: String
  contact: String
  copyright: String
  currency: String
  description: String
  email: String
  facebook: String
  faq: String
  favicon: String
  homeabout: String
  instagram: String
  keywords: String
  linkedin: String

  """Image of the Service"""
  logo: Upload
  logo_second: String
  maintenance: Boolean! = false
  phoneNumber: String
  policy: String
  seodescription: String
  support: String
  tax: Float
  title: String
  twitter: String
  whatsapp: String
  workinghours: String
  youtube: String
}

input CreateShippingInput {
  """Description of the shipping"""
  body: String

  """Cost of the shipping"""
  cost: Float

  """Status of the shipping"""
  status: Boolean!

  """Title of the shipping"""
  title: String!
}

input CreateSiteInput {
  """Address of website"""
  address: String

  """Description of the Site"""
  body: String
  cardlayout: String

  """Domain of the Site"""
  cardnumber: String

  """Category of the Site"""
  category: Float

  """City of website"""
  city: String

  """Company name of the Site"""
  company: String

  """Country of website"""
  country: String

  """Domain of the Site"""
  domain: String

  """Email of the Site"""
  email: String

  """Language of website"""
  language: String

  """Logo of the site"""
  logo: Upload

  """Phonenumber of website"""
  phonenumber: String

  """Plan of the Site"""
  plan: Float
  port: Float!
  registerFields: [JSONObject!]

  """Body SEO of the Site"""
  seobody: String

  """Title SEO of the Site"""
  seotitle: String

  """Domain of the Site"""
  sheba: String

  """Slug of the Site"""
  slug: String!

  """Status of the Site"""
  status: Boolean
  tax: Float

  """Timezone of website"""
  timezone: String

  """Title of the Site"""
  title: String!

  """Type of the Site"""
  type: String!
  user: Float

  """Zipcode of website"""
  zipcode: String
}

input CreateSliderInput {
  alt: String
  body: String
  featured: Boolean!

  """Image of the Service"""
  image: Upload
  link: String!
  status: Boolean!
}

input CreateTimelineInput {
  """Example field (placeholder)"""
  url: String!
}

input CreateUserInput {
  """about of the user"""
  about: String

  """address of the user"""
  address: String

  """Image of the Event"""
  avatar: Upload

  """Category of the user"""
  category: Float

  """email of the user"""
  email: String!

  """first name of the user"""
  firstName: String!
  gender: String

  """last name of the user"""
  lastName: String!

  """Level of the user"""
  level: String

  """mobilenumber of the user"""
  mobilenumber: Float!

  """mobilenumber of the user"""
  password: String!

  """mobilenumber of the user"""
  phonenumber: Float

  """Postalcode of the user"""
  postalcode: String
  registerFields: JSONObject

  """role of the user"""
  role: Float
  seminars: [Float!]

  """Site of the user"""
  siteid: Float

  """status of the user"""
  status: Boolean

  """username of the user"""
  username: String

  """type of the user"""
  usertype: String!
  workshops: [Float!]
}

input CreateWorkshopInput {
  """Description of the workshop"""
  body: String

  """Capacity of workshop"""
  capacity: Float

  """Enddate of workshop"""
  end_date: DateTime

  """Is workshop featured"""
  featured: Boolean!

  """Hall of the workshop"""
  hall: Float

  """Image of the Hall"""
  image: Upload

  """User of the Workshop"""
  lecturers: [Float!]

  """Price of the workshop"""
  price: Float

  """Body SEO of the workshop"""
  seobody: String

  """Title SEO of the workshop"""
  seotitle: String
  services: [Float!]

  """Slug of the workshop"""
  slug: String!

  """Startdate of workshop"""
  start_date: DateTime

  """State of the workshop"""
  state: String = "not_started"

  """Status of the workshop"""
  status: Boolean

  """Title of the workshop"""
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Department {
  """Description of the Category"""
  body: String

  """Chats user of the department"""
  chats: [Chat!]
  created: DateTime

  """id of the Category"""
  id: Float!

  """Image of the course"""
  image: String

  """Site of the item"""
  site: Site

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String!
  updated: DateTime
}

type DepartmentPaginate {
  count: Float!
  departments: [Department!]
}

type Event {
  """body of the blog"""
  body: String!

  """Capacity of seminar"""
  capacity: Float

  """Author of the blog"""
  category: Category
  created: DateTime

  """Duration of the course"""
  duration: String

  """End date of event"""
  end_date: DateTime

  """Featured of the blog"""
  featured: Boolean!
  halls: [Hall!]

  """Id of the blog"""
  id: Float!

  """Image of the event"""
  image: String

  """OFF Price of the seminar"""
  offprice: Float

  """Pdf of the event"""
  pdf: String

  """Price of the seminar"""
  price: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Author of the blog"""
  site: Site

  """Slug of the blog"""
  slug: String!

  """Startdate of event"""
  start_date: DateTime

  """Status of the blog"""
  status: Boolean!

  """title of the blog"""
  title: String!
  updated: DateTime

  """Author of the blog"""
  user: User

  """video of the seminar"""
  video: String
}

type EventPaginate {
  count: Float!
  events: [Event!]
}

input GetAttendeesArgs {
  limit: Float
  s: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
  w: Float
}

input GetBlogsArgs {
  category: String
  featured: Boolean
  limit: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  sort: String
  status: Boolean
}

input GetBrandsArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
}

input GetCategoriesArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
  type: String
}

input GetChatsArgs {
  department: Float
  limit: Float
  priority: String
  searchTerm: String
  siteid: Float
  skip: Float!
  sms: Boolean
  status: Boolean
  type: String
}

input GetCommentsArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
}

input GetContactsArgs {
  category: String
  featured: Boolean
  limit: Float
  searchTerm: String
  skip: Float!
  sort: String
  status: Boolean
}

input GetCouponsArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
  type: String
}

input GetDepartmentsArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
}

input GetEventsArgs {
  category: String
  featured: Boolean
  isDeleted: Boolean
  limit: Float
  price: String
  searchTerm: String
  site: String
  siteid: Float
  skip: Float!
  sort: String
  status: Boolean
}

input GetHallsArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
}

input GetInvoicesArgs {
  limit: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
  type: String
}

input GetMenusArgs {
  limit: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
}

input GetOrdersArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
  type: String
}

input GetPaymentsArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
}

input GetPlansArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  site: String
  skip: Float!
  sort: String
  status: Boolean
}

input GetProductsArgs {
  category: String
  featured: Boolean
  limit: Float
  price: String
  searchTerm: String
  skip: Float!
  sort: String
  status: Boolean
}

input GetRolesApiArgs {
  limit: Float
  searchTerm: String
  skip: Float!
}

input GetScansArgs {
  all: Boolean! = false
  limit: Float
  siteid: Float
  skip: Float!
}

input GetSeminarsArgs {
  category: String
  featured: Boolean
  hall: Float
  isDeleted: Boolean
  limit: Float
  price: String
  searchTerm: String
  site: String
  siteid: Float
  skip: Float!
  sort: String
  status: Boolean
}

input GetServicesArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  site: String
  siteid: Float
  skip: Float!
  sort: String
  status: Boolean
}

input GetShippingsArgs {
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
}

input GetSitesArgs {
  external: Boolean
  featured: Boolean
  limit: Float
  searchTerm: String
  skip: Float!
  status: Boolean
  type: String
}

input GetSlidersArgs {
  featured: Boolean
  limit: Float
  searchTerm: String
  site: Float
  skip: Float!
  status: Boolean
  type: String
}

input GetTimelinsArgs {
  featured: Boolean
  limit: Float
  scannedby: Float
  searchTerm: String
  seminar: Float
  site: Float
  skip: Float!
  status: Boolean
  type: String
  user: Float
  workshop: Float
}

input GetUserTimelineArgs {
  checkin: Boolean
  seminar: String
  url: String
  workshop: String
}

input GetUsersApiArgs {
  category: Float
  limit: Float
  role: Float
  searchTerm: String
  siteid: Float
  skip: Float!
  status: Boolean
  usertype: String
}

input GetWorkshopsArgs {
  category: String
  featured: Boolean
  hall: Float
  isDeleted: Boolean
  limit: Float
  price: String
  searchTerm: String
  site: String
  siteid: Float
  skip: Float!
  sort: String
  status: Boolean
}

type Hall {
  """Description of the hall"""
  body: String
  created: DateTime
  deletedAt: DateTime

  """Event of the hall"""
  event: Event

  """Is hall featured"""
  featured: Boolean!

  """id of the hall"""
  id: Float!

  """Image of the hall"""
  image: String
  seminars: [Seminar!]

  """Site of the item"""
  site: Site

  """Status of the hall"""
  status: Boolean!

  """Title of the hall"""
  title: String!
  updated: DateTime

  """User of the hall"""
  user: User
  workshops: [Workshop!]
}

type HallPaginate {
  count: Float!
  halls: [Hall!]
}

type Invoice {
  """Coupon of the payment"""
  coupon: Float
  created: DateTime

  """Done payment"""
  donepayment: Boolean!
  duedate: DateTime

  """id of the invoice"""
  id: Float!

  """Invoice number of the invoice"""
  invoicenumber: Float!
  issuedate: DateTime

  """Title of the invoice"""
  note: String

  """Order of invoice"""
  order: Order!

  """User of the payment"""
  payment: Payment!

  """Payment type of the invoice"""
  paymenttype: String
  readat: DateTime

  """Salesperson of the invoice"""
  salesperson: String

  """Site of the item"""
  site: Site

  """Total of the invoice"""
  total: Float

  """Type of the invoice"""
  type: String!
  updated: DateTime

  """User of invoice"""
  user: User
}

type InvoicePaginate {
  count: Float!
  invoices: [Invoice!]
}

type Item {
  created: DateTime

  """Id of the item"""
  id: Float!

  """Order of the item"""
  order: Order!

  """Price of the items"""
  price: Float!

  """Product of the item"""
  product: Product

  """number of the items"""
  quantity: Float!
  updated: DateTime
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Like {
  """ Course of the Favorite"""
  blog: Blog
  created: DateTime

  """Id of the Favorite"""
  id: Float!

  """like of the Like"""
  like: Boolean!

  """ User of the Favorite"""
  product: Product
  updated: DateTime

  """ User of the Favorite"""
  user: User!
}

input ManualCheckinInput {
  aid: Int!
  id: Int
  service: Float
  type: String!
}

type Menu {
  created: DateTime

  """id of the menu"""
  id: Float!

  """Link of the menu"""
  link: String
  order: Float

  """Site of the menu"""
  site: Site

  """Status of the menu"""
  status: Boolean

  """Title of the menu"""
  title: String!
  updated: DateTime
}

type MenuPaginate {
  count: Float!
  menus: [Menu!]
}

type Message {
  """title of the Chat"""
  body: String!

  """Chat of the message"""
  chat: Chat!
  created: DateTime

  """Id of the message"""
  id: Float!
  read: DateTime

  """Site of the item"""
  site: Site
  updated: DateTime

  """ User of the chat"""
  user: User
}

type Mutation {
  bulkcheckin(input: Bulkaction!): Boolean!
  bulkcheckout(input: Bulkaction!): Boolean!
  checkin(aid: Int!, id: Int!, type: String!): Boolean!
  checkout(input: ManualCheckinInput!): Boolean!
  createAttendee(input: CreateAtendeeInput!): Attendee!
  createBlog(input: CreateBlogInput!): Blog!
  createBrand(input: CreateBrandInput!): Brand!
  createCategory(input: CreateCategoryInput!): Category!
  createChat(input: CreateChatInput!): Boolean!
  createComment(input: CreateCommentInput!): Comment!
  createContact(input: CreateContactInput!): Contact!
  createCoupon(input: CreateCouponInput!): Coupon!
  createDepartment(input: CreateDepartmentInput!): Department!
  createEvent(input: CreateEventInput!): Event!
  createHall(input: CreateHallInput!): Hall!
  createInvoice(input: CreateInvoiceInput!): Invoice!
  createInvoiceChat(input: CreateChatInput!): Boolean!
  createItem(createItemInput: CreateItemInput!): Item!
  createLike(input: CreateLikeInput!): Like!
  createMenu(input: CreateMenuInput!): Menu!
  createMessage(input: CreateMessageInput!): Message!
  createOrder(input: CreateOrderInput!): Order!
  createPayment(input: CreatePaymentInput!): Boolean!
  createPlan(input: CreatePlanInput!): Plan!
  createProduct(input: CreateProductInput!): Product!
  createRole(input: CreateRoleInput!): Role!
  createScan(input: CreateScanInput!): Scan!
  createSeminar(input: CreateSeminarInput!): Seminar!
  createService(input: CreateServiceInput!): Service!
  createSetting(input: CreateSettingInput!): Setting!
  createShipping(input: CreateShippingInput!): Shipping!
  createSite(input: CreateSiteInput!): Site!
  createSlider(input: CreateSliderInput!): Slider!
  createTimeline(input: CreateTimelineInput!): Timeline!
  createUser(input: CreateUserInput!): User!
  createUserChatApi(input: CreateChatInput!): Boolean!
  createWorkshop(input: CreateWorkshopInput!): Workshop!
  doPayment(input: CreatePaymentInput!): String!
  login: User!
  manualCheckin(input: ManualCheckinInput!): Boolean!
  removeAttendee(id: Int!): Boolean!
  removeBlog(id: Int!): Boolean!
  removeBrand(id: Int!): Boolean!
  removeCategory(id: Int!): Boolean!
  removeChat(id: Int!): Chat!
  removeComment(id: Int!): Boolean!
  removeContact(id: Int!): Boolean!
  removeCoupon(id: Int!): Boolean!
  removeDepartment(id: Int!): Boolean!
  removeEvent(id: Int!): Boolean!
  removeHall(id: Int!): Boolean!
  removeImage(id: Int!): Boolean!
  removeInvoice(id: Int!): Boolean!
  removeItem(id: Int!): Boolean!
  removeLike(id: Int!): Like!
  removeMenu(id: Int!): Boolean!
  removeMessage(id: Int!): Message!
  removeOrder(id: Int!): Boolean!
  removePayment(id: Int!): Boolean!
  removePlan(id: Int!): Boolean!
  removeProduct(id: Int!): Boolean!
  removeRole(id: Int!): Boolean!
  removeScan(id: Int!): Boolean!
  removeSeminar(id: Int!): Boolean!
  removeService(id: Int!): Boolean!
  removeSetting(id: Int!): Setting!
  removeShipping(id: Int!): Boolean!
  removeSite(id: Int!): Boolean!
  removeSlider(id: Int!): Boolean!
  removeTimeline(id: Int!): Timeline!
  removeUser(id: Int!): Boolean!
  removeWorkshop(id: Int!): Boolean!
  updateAttendee(input: UpdateAttendeeInput!): Attendee!
  updateBlog(input: UpdateBlogInput!): Blog!
  updateBrand(input: UpdateBrandInput!): Brand!
  updateCategory(input: UpdateCategoryInput!): Category!
  updateComment(input: UpdateCommentInput!): Comment!
  updateContact(input: UpdateContactInput!): Contact!
  updateCoupon(input: UpdateCouponInput!): Coupon!
  updateDepartment(input: UpdateDepartmentInput!): Department!
  updateEvent(input: UpdateEventInput!): Event!
  updateHall(input: UpdateHallInput!): Hall!
  updateInvoice(input: UpdateInvoiceInput!): Invoice!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  updateMenu(input: UpdateMenuInput!): Menu!
  updateMessage(input: UpdateMessageInput!): Message!
  updateOrder(input: UpdateOrderInput!): Order!
  updatePayment(input: UpdatePaymentInput!): Payment!
  updatePlan(input: UpdatePlanInput!): Plan!
  updateProduct(input: UpdateProductInput!): Product!
  updateRole(input: UpdateRoleInput!): Role!
  updateScan(input: UpdateScanInput!): Scan!
  updateSeminar(input: UpdateSeminarInput!): Seminar!
  updateService(input: UpdateServiceInput!): Service!
  updateSetting(input: UpdateSettingInput!): Setting!
  updateShipping(input: UpdateShippingInput!): Shipping!
  updateSite(input: UpdateSiteInput!): Site!
  updateSlider(input: UpdateSliderInput!): Slider!
  updateTimeline(updateTimelineInput: UpdateTimelineInput!): Timeline!
  updateUser(input: UpdateUserInput!): User!
  updateWorkshop(input: UpdateWorkshopInput!): Workshop!
  uploadUsersCsv(input: UploadUsersPdfInput!): Boolean!
  verification(input: VerificationInput!): Boolean!
}

type Order {
  """Coupon of the order"""
  coupon: Coupon!
  created: DateTime

  """Id of the order"""
  id: Float!

  """Invoice of invoice"""
  invoice: Invoice

  """Items of the order"""
  items: [Item!]

  """Payment of the order"""
  payment: Payment
  readat: DateTime

  """Shipping of the order"""
  shipping: Shipping!

  """Site of the item"""
  site: Site

  """status of the order"""
  status: Boolean!

  """Subtotal of the order"""
  subtotal: Float!

  """Amount of the order"""
  totalprice: Float!
  updated: DateTime

  """User of the order"""
  user: User!
}

type OrderPaginate {
  count: Float!
  orders: [Order!]
}

type Payment {
  """Amount of the payment"""
  amount: Float
  approve: Boolean

  """Authority of the payment"""
  authority: String
  created: DateTime

  """Payment method of the payment"""
  host: String

  """Id of the payment"""
  id: Float!

  """paymentId of the payment"""
  paymentId: Float

  """Payment method of the payment"""
  paymentMethodId: String

  """Payment method of the payment"""
  paymentmethod: String
  products: [productOptions!]

  """Refid of the payment"""
  refid: String

  """Site of the item"""
  site: Site

  """status of the payment"""
  status: String

  """Status of the payment"""
  statusCode: String

  """Amount of the payment"""
  type: String
  updated: DateTime

  """User of the payment"""
  user: User
}

type PaymentPaginate {
  count: Float!
  payments: [Payment!]
}

type PermissionObjectType {
  key: String
  value: Boolean
}

type PermissionType {
  create: [PermissionObjectType!]
  delete: [PermissionObjectType!]
  read: [PermissionObjectType!]
  update: [PermissionObjectType!]
}

type Plan {
  """body of the plan"""
  body: String
  created: DateTime

  """Id of the plan"""
  id: Float!

  """Image of the plan"""
  image: String

  """Price of the plan"""
  price: Float

  """Service of plan"""
  services: [Service!]

  """Site of the item"""
  site: Site

  """Slug of the plan"""
  slug: String!

  """Sms of the plan"""
  sms: Float

  """Status of the plan"""
  status: Boolean!

  """Subtitle of the plan"""
  subtitle: String

  """title of the plan"""
  title: String!
  updated: DateTime

  """Author of the plan"""
  user: User
}

type PlanPaginate {
  count: Float!
  plans: [Plan!]
}

type Product {
  """body of the product"""
  body: String

  """Category of the product"""
  category: Category!
  created: DateTime

  """Is product featured"""
  featured: Boolean!

  """Enable comments of product"""
  hascomment: Boolean!

  """Id of the product"""
  id: Float!

  """Image of the product"""
  image: [String!]

  """Off Price of the product"""
  offprice: Float

  """Price of the product"""
  price: Float

  """Quantity of the product"""
  quantity: Float

  """Body SEO of the product"""
  seobody: String

  """Title SEO of the product"""
  seotitle: String

  """Site of the item"""
  site: Site

  """Slug of the product"""
  slug: String!

  """Status of product"""
  status: Boolean!

  """title of the product"""
  title: String!
  updated: DateTime
  variations: [ProductVariationType!]
}

type ProductPaginate {
  count: Float!
  products: [Product!]
}

type ProductVariationType {
  idx: Float
  value: String
  variation: VariationType
}

type Query {
  Attendee(id: Int!): Attendee!
  attendees(input: GetAttendeesArgs!): AttendeePaginate!
  attendeesApi(input: GetAttendeesArgs!): AttendeePaginate!
  blog(id: Int!): Blog!
  blogApi(slug: String!): Blog!
  blogs(input: GetBlogsArgs!): BlogPaginate!
  blogsApi(input: GetBlogsArgs!): BlogPaginate!
  brand(id: Int!): Brand!
  brandApi(id: Int!): Brand!
  brands(input: GetBrandsArgs!): BrandPaginate!
  brandsApi(input: GetBrandsArgs!): BrandPaginate!
  categories(input: GetCategoriesArgs!): CategoryPaginate!
  categoriesApi(input: GetCategoriesArgs!): CategoryPaginate!
  category(id: Int!): Category!
  categoryApi(id: Int!): Category!
  chat(id: Int!): Chat!
  chatApi(id: Int!): Chat!
  chats(input: GetChatsArgs!): ChatPaginate!
  chatsApi(input: GetChatsArgs!): ChatPaginate!
  comment(id: Int!): Comment!
  comments(input: GetCommentsArgs!): CommentPaginate!
  contact(id: Int!): Contact!
  contacts(input: GetContactsArgs!): ContactPaginate!
  coupon(id: Int!): Coupon!
  coupons(input: GetCouponsArgs!): CouponPaginate!
  department(id: Int!): Department!
  departments(input: GetDepartmentsArgs!): DepartmentPaginate!
  event(id: Int!): Event!
  eventApi(slug: String!): Event!
  events(input: GetEventsArgs!): EventPaginate!
  eventsApi(input: GetEventsArgs!): EventPaginate!
  getSetting: Setting!
  getSite(id: Int!): Site!
  hall(id: Int!): Hall!
  halls(input: GetHallsArgs!): HallPaginate!
  invoice(id: Int!, read: Boolean! = false): Invoice!
  invoices(input: GetInvoicesArgs!): InvoicePaginate!
  item(id: Int!): Item!
  items: [Item!]!
  like(id: Int!): Like!
  likes: [Like!]!
  menu(id: Int!): Menu!
  menuApi(id: Int!): Menu!
  menus(input: GetMenusArgs!): MenuPaginate!
  menusApi(input: GetMenusArgs!): MenuPaginate!
  message(id: Int!): Message!
  messages: [Message!]!
  order(id: Int!, read: Boolean! = false): Order!
  orders(input: GetOrdersArgs!): OrderPaginate!
  payment(id: Int!): Payment!
  payments(input: GetPaymentsArgs!): PaymentPaginate!
  paymentsApi(input: GetPaymentsArgs!): PaymentPaginate!
  plan(id: Int!): Plan!
  planApi(slug: String!): Plan!
  plans(input: GetPlansArgs!): PlanPaginate!
  plansApi(input: GetPlansArgs!): PlanPaginate!
  product(id: Int!): Product!
  productApi(slug: String!): Product!
  products(input: GetProductsArgs!): ProductPaginate!
  productsApi(input: GetProductsArgs!): ProductPaginate!
  role(id: Int!): Role!
  roles(input: GetRolesApiArgs!): RolePaginate!
  scan(id: Int!): Scan!
  scans(input: GetScansArgs!): ScanPaginate!
  seminar(id: Int!): Seminar!
  seminarApi(slug: String!): Seminar!
  seminars(input: GetSeminarsArgs!): SeminarPaginate!
  seminarsApi(input: GetSeminarsArgs!): SeminarPaginate!
  seminarsPdf(input: GetSeminarsArgs!): String!
  service(id: Int!): Service!
  services(input: GetServicesArgs!): ServicePaginate!
  servicesApi(input: GetServicesArgs!): ServicePaginate!
  settings: [Setting!]!
  shipping(id: Int!): Shipping!
  shippings(input: GetShippingsArgs!): ShippingPaginate!
  site(id: Int!): Site!
  sites(input: GetSitesArgs!): SitePaginate!
  slider(id: Int!): Slider!
  sliders(input: GetSlidersArgs!): SliderPaginate!
  slidersApi(input: GetSlidersArgs!): SliderPaginate!
  teacherPaymentsApi(input: GetPaymentsArgs!): PaymentPaginate!
  timeline(input: GetUserTimelineArgs!): Attendee!
  timelines(input: GetTimelinsArgs!): TimelinePaginate!
  user(id: Int!): User!
  userEventsApi(input: GetEventsArgs!): AttendeePaginate!
  userTimelines(input: GetTimelinsArgs!): TimelinePaginate!
  users(input: GetUsersApiArgs!): UserPaginate!
  usersPdf(input: GetUsersApiArgs!): String!
  workshop(id: Int!): Workshop!
  workshopApi(slug: String!): Workshop!
  workshops(input: GetWorkshopsArgs!): WorkshopPaginate!
  workshopsApi(input: GetWorkshopsArgs!): WorkshopPaginate!
  workshopsPdf(input: GetWorkshopsArgs!): String!
}

type Role {
  """last name of the role"""
  body: String
  created: DateTime

  """id of the role"""
  id: Float!
  permissions: PermissionType

  """Site of the item"""
  site: Site

  """status of the coupon"""
  status: Boolean

  """first name of the role"""
  title: String!
  updated: DateTime

  """User of role"""
  users: [User!]
}

type RolePaginate {
  count: Float!
  roles: [Role!]
}

type Scan {
  created: DateTime
  id: Float!

  """Organizer of the attendee"""
  scanby: User
  seminar: Seminar
  senmiarstimeline: [Scan!]

  """Site of the item"""
  site: Site
  type: String!
  updated: DateTime

  """Organizer of the attendee"""
  user: User
  workshop: Workshop
  workshopstimeline: [Scan!]
}

type ScanPaginate {
  count: Float!
  scans: [Scan!]
}

type Seminar {
  """Attendee of the section"""
  attendees: [Attendee!]

  """Description of the workshop"""
  body: String

  """Capacity of workshop"""
  capacity: Float
  created: DateTime

  """End date of workshop"""
  end_date: DateTime

  """Is workshop featured"""
  featured: Boolean!

  """Hall of the workshop"""
  hall: Hall

  """id of the workshop"""
  id: Float!

  """Image of the workshop"""
  image: String

  """User of the Workshop"""
  lecturers: [User!]

  """Price of the workshop"""
  price: Float
  scans: [Scan!]

  """Body SEO of the workshop"""
  seobody: String

  """Title SEO of the workshop"""
  seotitle: String
  services: [Service!]

  """Site of the item"""
  site: Site

  """Slug of the workshop"""
  slug: String!

  """Startdate of workshop"""
  start_date: DateTime

  """State of the workshop"""
  state: String

  """Status of the workshop"""
  status: Boolean!

  """Title of the workshop"""
  title: String!
  updated: DateTime

  """User of the workshop"""
  user: User
}

type SeminarPaginate {
  count: Float!
  seminars: [Seminar!]
}

type Service {
  """body of the service"""
  body: String!
  created: DateTime

  """End date of service"""
  end_date: DateTime

  """Events of the service"""
  events: [Event!]

  """Id of the service"""
  id: Float!

  """Image of the service"""
  image: String

  """Per person of the service"""
  perperson: Float

  """Price of the service"""
  price: Float

  """Quantity of the service"""
  quantity: Float

  """Site of the item"""
  site: Site

  """Startdate of service"""
  start_date: DateTime

  """Status of the service"""
  status: Boolean!

  """title of the service"""
  title: String!
  updated: DateTime

  """Author of the service"""
  user: User
  workshops: [Workshop!]
}

type ServicePaginate {
  count: Float!
  services: [Service!]
}

type Setting {
  about: String
  address: String
  companyName: String
  contact: String
  copyright: String
  created: DateTime
  currency: String
  description: String
  email: String
  facebook: String
  faq: String
  favicon: String
  homeabout: String

  """Id of the Setting"""
  id: Float!
  instagram: String
  keywords: String
  linkedin: String
  logo: String
  logo_second: String
  maintenance: Boolean
  phoneNumber: String
  policy: String
  seodescription: String
  support: String
  tax: Float
  title: String
  twitter: String
  updated: DateTime
  whatsapp: String
  workinghours: String
  youtube: String
}

type Shipping {
  """Description of the shipping"""
  body: String

  """Cost of the shipping"""
  cost: Float
  created: DateTime

  """Id of the order"""
  id: Float!

  """Status of the shipping"""
  status: Boolean!

  """Title of the shipping"""
  title: String!
  updated: DateTime
}

type ShippingPaginate {
  count: Float!
  shippings: [Shipping!]
}

type Site {
  """Address of website"""
  address: String

  """Attendee of the section"""
  attendees: [Attendee!]

  """Description of the Site"""
  body: String
  cardlayout: String

  """Domain of the Site"""
  cardnumber: String

  """category of the Site"""
  category: Category

  """City of website"""
  city: String

  """Company name of the Site"""
  company: String

  """Country of website"""
  country: String
  created: DateTime

  """Domain of the Site"""
  domain: String

  """Email of the Site"""
  email: String

  """id of the Site"""
  id: Float!

  """Language of website"""
  language: String

  """Logo of the course"""
  logo: String

  """Phonenumber of website"""
  phonenumber: String

  """category of the Site"""
  plan: Plan

  """Port of the Site"""
  port: Float!
  registerFields: [registerFieldsType!]

  """Body SEO of the Site"""
  seobody: String

  """Title SEO of the Site"""
  seotitle: String

  """Domain of the Site"""
  sheba: String

  """Slug of the Site"""
  slug: String!

  """Status of the Site"""
  status: Boolean
  tax: Float

  """Timezone of website"""
  timezone: String

  """Title of the Site"""
  title: String!

  """Type of the Site"""
  type: String!
  updated: DateTime

  """User of the site"""
  user: User

  """Zipcode of website"""
  zipcode: String
}

type SitePaginate {
  count: Float!
  sites: [Site!]
}

type Slider {
  alt: String
  body: String
  created: DateTime
  featured: Boolean!

  """Id of slider"""
  id: Float!
  image: String
  link: String!

  """Site of the item"""
  site: Site
  status: Boolean!
  updated: DateTime
}

type SliderPaginate {
  count: Float!
  sliders: [Slider!]
}

type Timeline {
  checkin: DateTime
  checkout: DateTime
  created: DateTime

  """Id of slider"""
  id: Float!

  """Author of the blog"""
  scannedby: User

  """Site of the item"""
  seminar: Seminar

  """Site of the item"""
  site: Site
  updated: DateTime

  """Author of the blog"""
  user: User

  """Site of the item"""
  workshop: Workshop
}

type TimelinePaginate {
  count: Float!
  timelines: [Timeline!]
  total: Float!
}

input UpdateAttendeeInput {
  id: Int!
  seminar: Float
  services: String
  site: Float

  """Status of the attendee"""
  status: Boolean = true

  """User of the attendee"""
  user: Float
  workshop: Float
}

input UpdateBlogInput {
  """body of the blog"""
  body: String

  """Category of the blog"""
  category: Float

  """Featured of the blog"""
  featured: Boolean
  id: Int!

  """Image of the Service"""
  image: Upload

  """Read time of the blog"""
  readtime: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Slug of the blog"""
  slug: String

  """Status of the blog"""
  status: Boolean

  """title of the blog"""
  title: String
}

input UpdateBrandInput {
  """Description of the Brand"""
  body: String
  brand: Float

  """Is course featured"""
  featured: Boolean
  id: Int!

  """Image of the Service"""
  image: Upload
  link: String

  """Status of the brand"""
  status: Boolean

  """Title of the Brand"""
  title: String
}

input UpdateCategoryInput {
  """Description of the Category"""
  body: String
  category: Float

  """Is course featured"""
  featured: Boolean
  id: Int!

  """Image of the Service"""
  image: Upload

  """Title of the Category"""
  slug: String

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String

  """Type of the Category"""
  type: String
}

input UpdateCommentInput {
  """body of the Comment"""
  body: String
  id: Int!

  """status of the Comment"""
  status: Boolean

  """User of the Comment"""
  user: Float
}

input UpdateContactInput {
  body: String
  email: String
  id: Int!
  name: String

  """Site of the Event"""
  siteid: Float
  subject: String
}

input UpdateCouponInput {
  """description of the coupon"""
  body: String

  """Code of the coupon"""
  code: String

  """expire date of the coupon"""
  expiredate: DateTime
  id: Int!

  """limit of the coupon"""
  limit: Float

  """percent of the coupon"""
  percent: Float

  """start date of the coupon"""
  startdate: DateTime

  """status of the coupon"""
  status: Boolean

  """title of the coupon"""
  title: String

  """Type of the coupon"""
  type: String
}

input UpdateDepartmentInput {
  """Description of the Category"""
  body: String
  id: Int!

  """Image of the course"""
  image: String

  """Status of the category"""
  status: Boolean

  """Title of the Category"""
  title: String
}

input UpdateEventInput {
  """body of the Event"""
  body: String

  """Capacity of seminar"""
  capacity: Float

  """Site of the Event"""
  category: Float

  """Duration of the course"""
  duration: String

  """Enddate of workshop"""
  end_date: DateTime

  """Featured of the Event"""
  featured: Boolean
  id: Int!

  """Image of the Event"""
  image: Upload

  """Offprice of seminar"""
  offprice: Float

  """PDF of the Event"""
  pdf: Upload

  """Price of the Event"""
  price: Float

  """Body SEO of the Event"""
  seobody: String

  """Title SEO of the Event"""
  seotitle: String

  """Site of the Event"""
  site: Float

  """Slug of the Event"""
  slug: String

  """Startdate of workshop"""
  start_date: DateTime

  """Status of the Event"""
  status: Boolean

  """title of the Event"""
  title: String

  """Video of the Event"""
  video: String
}

input UpdateHallInput {
  """Description of the hall"""
  body: String

  """Event of the hall"""
  event: Float

  """Is hall featured"""
  featured: Boolean
  id: Int!

  """Image of the Hall"""
  image: Upload

  """Status of the hall"""
  status: Boolean

  """Title of the hall"""
  title: String
}

input UpdateInvoiceInput {
  """discount of invoice"""
  coupon: Float

  """Payment has been done of the invoice"""
  donepayment: Boolean
  duedate: DateTime
  id: Int!

  """Invoice number of the invoice"""
  invoicenumber: Float
  issuedate: DateTime
  items: [JSONObject!]

  """Title of the invoice"""
  note: String
  order: Float

  """Payment of the invoice"""
  payment: Float

  """Payment type of the invoice"""
  paymenttype: String

  """Salesperson of the invoice"""
  salesperson: String

  """Shipping of invoice"""
  shipping: Float

  """Site of the Event"""
  site: Float

  """Type of the invoice"""
  type: String

  """User of invoice"""
  user: Float
}

input UpdateItemInput {
  """Event of the item"""
  event: Float
  id: Int!

  """Order of the item"""
  order: Float

  """Price of the items"""
  price: Float

  """number of the items"""
  quantity: Float
}

input UpdateMenuInput {
  id: Int!
  link: String
  order: Float = 0
  status: Boolean
  title: String
}

input UpdateMessageInput {
  """title of the Chat"""
  body: String

  """Chat of the message"""
  chat: Float
  id: Int!
}

input UpdateOrderInput {
  """Coupon of the order"""
  coupon: Float
  id: Int!

  """Payment of the order"""
  payment: Float

  """Shipping of the order"""
  shipping: Float

  """status of the order"""
  status: Boolean = false

  """Subtotal of the order"""
  subtotal: Float

  """Amount of the order"""
  totalprice: Float

  """User of the order"""
  user: Float
}

input UpdatePaymentInput {
  """Amount of the payment"""
  amount: Float

  """Authority of the payment"""
  authority: String

  """Coupon method id of the payment"""
  coupon: Float
  host: String
  id: Int!

  """Payment method id of the payment"""
  payment: Float

  """Payment method id of the payment"""
  paymentMethodId: String

  """Payment method of the payment"""
  paymentmethod: String
  products: [JSONObject!]

  """Refid of the payment"""
  refid: String

  """Site of the Event"""
  site: Float

  """Status of the payment"""
  statusCode: String

  """Type of the payment"""
  type: String
}

input UpdatePlanInput {
  """body of the Plan"""
  body: String
  id: Int!

  """Image of the Plan"""
  image: Upload

  """body of the Plan"""
  price: Float

  """Service of the plans"""
  services: [Float!]

  """Slug of the plan"""
  slug: String

  """Sms of the Plan"""
  sms: Float

  """Status of the Plan"""
  status: Boolean

  """Subtitle of the plan"""
  subtitle: String

  """title of the Plan"""
  title: String
}

input UpdateProductInput {
  """body of the product"""
  body: String

  """Category of the product"""
  category: Float

  """Is product featured"""
  featured: Boolean

  """Enable comments of product"""
  hascomment: Boolean
  id: Int!

  """Image of the product"""
  image: [String!]

  """Off Price of the product"""
  offprice: Float
  prerequisite: [JSONObject!]

  """Price of the product"""
  price: Float

  """Quantity of the product"""
  quantity: Float

  """Body SEO of the blog"""
  seobody: String

  """Title SEO of the blog"""
  seotitle: String

  """Slug of the Category"""
  slug: String

  """Status of product"""
  status: Boolean

  """title of the product"""
  title: String
  variations: [JSONObject!]
}

input UpdateRoleInput {
  body: String
  id: Int!
  permissions: JSONObject

  """Title field (placeholder)"""
  title: String
}

input UpdateScanInput {
  id: Int!

  """User of the attendee"""
  scanby: Float
  seminar: Float
  site: Float
  type: String

  """User of the attendee"""
  user: Float
  workshop: Float
}

input UpdateSeminarInput {
  """Description of the seminar"""
  body: String

  """Capacity of Seminar"""
  capacity: Float

  """Enddate of Seminar"""
  end_date: DateTime

  """Is seminar featured"""
  featured: Boolean

  """Hall of the seminar"""
  hall: Float
  id: Int!

  """Image of the Seminar"""
  image: Upload

  """User of the Seminar"""
  lecturers: [Float!]

  """Price of the seminar"""
  price: Float

  """Body SEO of the seminar"""
  seobody: String

  """Title SEO of the seminar"""
  seotitle: String
  services: [Float!]

  """Slug of the seminar"""
  slug: String

  """Startdate of Seminar"""
  start_date: DateTime

  """State of the seminar"""
  state: String = "not_started"

  """Status of the seminar"""
  status: Boolean

  """Title of the seminar"""
  title: String
}

input UpdateServiceInput {
  """body of the Service"""
  body: String

  """Enddate of service"""
  end_date: DateTime

  """Events of the service"""
  events: [Float!]
  id: Int!

  """Image of the service"""
  image: Upload

  """Per person of the service"""
  perperson: Float

  """body of the Service"""
  price: Float

  """Quantity of the Service"""
  quantity: Float

  """Startdate of service"""
  start_date: DateTime

  """Status of the Service"""
  status: Boolean

  """title of the Service"""
  title: String
}

input UpdateSettingInput {
  about: String
  address: String
  companyName: String
  contact: String
  copyright: String
  currency: String
  description: String
  email: String
  facebook: String
  faq: String
  favicon: String
  homeabout: String
  instagram: String
  keywords: String
  linkedin: String

  """Image of the Service"""
  logo: Upload
  logo_second: String
  maintenance: Boolean = false
  phoneNumber: String
  policy: String
  seodescription: String
  support: String
  tax: Float
  title: String
  twitter: String
  whatsapp: String
  workinghours: String
  youtube: String
}

input UpdateShippingInput {
  """Description of the shipping"""
  body: String

  """Cost of the shipping"""
  cost: Float
  id: Int!

  """Status of the shipping"""
  status: Boolean

  """Title of the shipping"""
  title: String
}

input UpdateSiteInput {
  """Address of website"""
  address: String

  """Description of the Site"""
  body: String
  cardlayout: String

  """Domain of the Site"""
  cardnumber: String

  """Category of the Site"""
  category: Float

  """City of website"""
  city: String

  """Company name of the Site"""
  company: String

  """Country of website"""
  country: String

  """Domain of the Site"""
  domain: String

  """Email of the Site"""
  email: String
  id: Int!

  """Language of website"""
  language: String

  """Logo of the site"""
  logo: Upload

  """Phonenumber of website"""
  phonenumber: String

  """Plan of the Site"""
  plan: Float
  port: Float
  registerFields: [JSONObject!]

  """Body SEO of the Site"""
  seobody: String

  """Title SEO of the Site"""
  seotitle: String

  """Domain of the Site"""
  sheba: String

  """Slug of the Site"""
  slug: String

  """Status of the Site"""
  status: Boolean
  tax: Float

  """Timezone of website"""
  timezone: String

  """Title of the Site"""
  title: String

  """Type of the Site"""
  type: String
  user: Float

  """Zipcode of website"""
  zipcode: String
}

input UpdateSliderInput {
  alt: String
  body: String
  featured: Boolean
  id: Int!

  """Image of the Service"""
  image: Upload
  link: String
  status: Boolean
}

input UpdateTimelineInput {
  id: Int!

  """Example field (placeholder)"""
  url: String
}

input UpdateUserInput {
  """about of the user"""
  about: String

  """address of the user"""
  address: String

  """Image of the Event"""
  avatar: Upload

  """Category of the user"""
  category: Float

  """email of the user"""
  email: String

  """first name of the user"""
  firstName: String
  gender: String
  id: Int!

  """last name of the user"""
  lastName: String

  """Level of the user"""
  level: String

  """mobilenumber of the user"""
  mobilenumber: Float

  """mobilenumber of the user"""
  password: String

  """mobilenumber of the user"""
  phonenumber: Float

  """Postalcode of the user"""
  postalcode: String
  registerFields: JSONObject

  """role of the user"""
  role: Float
  seminars: [Float!]

  """Site of the user"""
  siteid: Float

  """status of the user"""
  status: Boolean

  """username of the user"""
  username: String

  """type of the user"""
  usertype: String
  workshops: [Float!]
}

input UpdateWorkshopInput {
  """Description of the workshop"""
  body: String

  """Capacity of workshop"""
  capacity: Float

  """Enddate of workshop"""
  end_date: DateTime

  """Is workshop featured"""
  featured: Boolean

  """Hall of the workshop"""
  hall: Float
  id: Int!

  """Image of the Hall"""
  image: Upload

  """User of the Workshop"""
  lecturers: [Float!]

  """Price of the workshop"""
  price: Float

  """Body SEO of the workshop"""
  seobody: String

  """Title SEO of the workshop"""
  seotitle: String
  services: [Float!]

  """Slug of the workshop"""
  slug: String

  """Startdate of workshop"""
  start_date: DateTime

  """State of the workshop"""
  state: String = "not_started"

  """Status of the workshop"""
  status: Boolean

  """Title of the workshop"""
  title: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UploadUsersPdfInput {
  """CSV of the users"""
  csv: Upload
}

type User {
  """About of the user"""
  about: String

  """Token of the user"""
  accesstoken: String!

  """Address of the user"""
  address: String

  """Avatar of the user"""
  avatar: String

  """Category of the user"""
  category: Category
  created: DateTime

  """Email of the user"""
  email: String!

  """First name of the user"""
  firstName: String!
  gender: String

  """Id of the user"""
  id: Float!

  """Last name of the user"""
  lastName: String!

  """Level of the user"""
  level: String

  """Mobilenumber of the user"""
  mobilenumber: Float!

  """Password of the user"""
  password: String!

  """Phonenumber of the user"""
  phonenumber: Float

  """postalcode of the user"""
  postalcode: String
  registerFields: JSONObject

  """Role of the user"""
  role: Role
  seminars: [Seminar!]

  """Site of the user"""
  site: [Site!]

  """Site of the menu"""
  siteid: Site

  """Status of the user"""
  status: Boolean

  """Message of chats"""
  timelines: [Timeline!]
  updated: DateTime

  """Username of the user"""
  username: String

  """Type of the user"""
  usertype: String
  workshops: [Workshop!]
}

type UserPaginate {
  count: Float!
  pdf: String
  users: [User!]
}

type VariationType {
  title: String
  value: String
}

input VerificationInput {
  authority: String!
  user: String!
}

type Workshop {
  """Attendee of the section"""
  attendees: [Attendee!]

  """Description of the workshop"""
  body: String

  """Capacity of workshop"""
  capacity: Float
  created: DateTime

  """End date of workshop"""
  end_date: DateTime

  """Is workshop featured"""
  featured: Boolean!

  """Hall of the workshop"""
  hall: Hall

  """id of the workshop"""
  id: Float!

  """Image of the workshop"""
  image: String

  """User of the Workshop"""
  lecturers: [User!]

  """Price of the workshop"""
  price: Float
  scans: [Scan!]

  """Body SEO of the workshop"""
  seobody: String

  """Title SEO of the workshop"""
  seotitle: String
  services: [Service!]

  """Site of the item"""
  site: Site

  """Slug of the workshop"""
  slug: String!

  """Startdate of workshop"""
  start_date: DateTime

  """State of the workshop"""
  state: String

  """Status of the workshop"""
  status: Boolean!

  """Title of the workshop"""
  title: String!
  updated: DateTime

  """User of the workshop"""
  user: User
}

type WorkshopPaginate {
  count: Float!
  workshops: [Workshop!]
}

type productOptions {
  id: Float
  qty: Float
  services: String
  title: String
  type: String
}

type registerFieldsType {
  order: Float
  title: String
  type: String
  value: String
}