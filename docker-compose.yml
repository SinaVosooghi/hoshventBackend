version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    networks:
        - nesjs-network
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file:
      - .env  
    ports:
      - '5432:5432'

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /var/www/admin/dist:/var/www/admin
      - /var/www/office/dist:/var/www/office
      - /var/www/tenant/:/var/www/tenant
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - 80:${NGINX_PORT}
    depends_on:
      - app
      - postgres
    networks:
      - nesjs-network    

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-backend
    environment:
      - PORT=${PORT}
    ports:
      - '9000:9000'
    depends_on:
      - postgres
    volumes:
      - .:/app/src/backend
      - /var/www/tenant/:/var/www/tenant
    env_file:
      - .env
    networks:
      - nesjs-network      

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - nesjs-network

networks:
  nesjs-network:      
